{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonic\\\\react-applications\\\\src\\\\page_header\\\\MobileHeaderNavigation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport NavLinks from './NavLinks';\nimport './MobileHeaderNavigation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MobileHeaderNavigation() {\n  _s();\n  const container = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleMenu() {\n    setTimeout(() => {\n      setIsOpen(!isOpen);\n    }, 50);\n  }\n  if (container.current && isOpen) {\n    document.addEventListener('click', e => {\n      var _container$current;\n      console.log('found onclick', container.current, e.target, (_container$current = container.current) === null || _container$current === void 0 ? void 0 : _container$current.contains(e.target));\n    });\n  } else {\n    document.removeEventListener('click', toggleMenu);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"top-navigation-mobile\",\n    \"aria-label\": \"main\",\n    ref: container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: toggleMenu,\n      \"aria-label\": \"Menu\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": \"mobile-nav\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mobile-nav\",\n      className: \"dropdown-menu\",\n      children: /*#__PURE__*/_jsxDEV(NavLinks, {\n        closeMenu: toggleMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(MobileHeaderNavigation, \"mYXafVU7zJ8EFevEkkFAXpMb5iA=\");\n_c = MobileHeaderNavigation;\nexport default MobileHeaderNavigation;\nvar _c;\n$RefreshReg$(_c, \"MobileHeaderNavigation\");","map":{"version":3,"names":["React","useState","useRef","FontAwesomeIcon","faBars","NavLinks","jsxDEV","_jsxDEV","MobileHeaderNavigation","_s","container","isOpen","setIsOpen","toggleMenu","setTimeout","current","document","addEventListener","e","_container$current","console","log","target","contains","removeEventListener","className","ref","children","type","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","id","closeMenu","_c","$RefreshReg$"],"sources":["C:/Users/tonic/react-applications/src/page_header/MobileHeaderNavigation.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport NavLinks from './NavLinks';\r\nimport './MobileHeaderNavigation.css';\r\n\r\nfunction MobileHeaderNavigation() {\r\n    const container = useRef(null);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    function toggleMenu() {\r\n        setTimeout(() => {\r\n            setIsOpen(!isOpen);\r\n        }, 50);\r\n    }\r\n\r\n    if (container.current && isOpen) {\r\n        document.addEventListener('click', (e) => {\r\n            console.log('found onclick', container.current, e.target, container.current?.contains(e.target))\r\n        })\r\n    } else {\r\n        document.removeEventListener('click', toggleMenu);\r\n    }\r\n\r\n    return (\r\n        <nav className='top-navigation-mobile' aria-label='main' ref={container}>\r\n            <button type='button' onClick={toggleMenu} aria-label='Menu' aria-expanded={isOpen} aria-controls='mobile-nav'>\r\n                <FontAwesomeIcon icon={faBars} />\r\n            </button>\r\n            { isOpen &&\r\n                <div id='mobile-nav' className='dropdown-menu'>\r\n                    <NavLinks closeMenu={toggleMenu} />\r\n                </div>\r\n            }\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default MobileHeaderNavigation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,sBAAsBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,SAASY,UAAUA,CAAA,EAAG;IAClBC,UAAU,CAAC,MAAM;MACbF,SAAS,CAAC,CAACD,MAAM,CAAC;IACtB,CAAC,EAAE,EAAE,CAAC;EACV;EAEA,IAAID,SAAS,CAACK,OAAO,IAAIJ,MAAM,EAAE;IAC7BK,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK;MAAA,IAAAC,kBAAA;MACtCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEX,SAAS,CAACK,OAAO,EAAEG,CAAC,CAACI,MAAM,GAAAH,kBAAA,GAAET,SAAS,CAACK,OAAO,cAAAI,kBAAA,uBAAjBA,kBAAA,CAAmBI,QAAQ,CAACL,CAAC,CAACI,MAAM,CAAC,CAAC;IACpG,CAAC,CAAC;EACN,CAAC,MAAM;IACHN,QAAQ,CAACQ,mBAAmB,CAAC,OAAO,EAAEX,UAAU,CAAC;EACrD;EAEA,oBACIN,OAAA;IAAKkB,SAAS,EAAC,uBAAuB;IAAC,cAAW,MAAM;IAACC,GAAG,EAAEhB,SAAU;IAAAiB,QAAA,gBACpEpB,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEhB,UAAW;MAAC,cAAW,MAAM;MAAC,iBAAeF,MAAO;MAAC,iBAAc,YAAY;MAAAgB,QAAA,eAC1GpB,OAAA,CAACJ,eAAe;QAAC2B,IAAI,EAAE1B;MAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACPvB,MAAM,iBACJJ,OAAA;MAAK4B,EAAE,EAAC,YAAY;MAACV,SAAS,EAAC,eAAe;MAAAE,QAAA,eAC1CpB,OAAA,CAACF,QAAQ;QAAC+B,SAAS,EAAEvB;MAAW;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAET,CAAC;AAEd;AAACzB,EAAA,CA9BQD,sBAAsB;AAAA6B,EAAA,GAAtB7B,sBAAsB;AAgC/B,eAAeA,sBAAsB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}