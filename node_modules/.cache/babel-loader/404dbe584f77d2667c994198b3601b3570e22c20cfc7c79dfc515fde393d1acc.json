{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonic\\\\react-applications\\\\src\\\\components\\\\ExpandableSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ExpandableSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpandableSection({\n  heading,\n  subheading,\n  children\n}) {\n  _s();\n  const container = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    console.log('updating class list (soon)', container.current.classList);\n    container.current.classList.toggle('closed', isOpen);\n    // document.getElementsByClassName('expandable-container').classList.toggle('closed', isOpen);\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expandable-container closed\",\n    ref: container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expandable-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsOpen(!isOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: subheading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"closed-expander\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"open-expander\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expandable-contents\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n}\n_s(ExpandableSection, \"wd3zew23SU8tNbdVHy+NcFBGmJ8=\");\n_c = ExpandableSection;\nexport default ExpandableSection;\nvar _c;\n$RefreshReg$(_c, \"ExpandableSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ExpandableSection","heading","subheading","children","_s","container","isOpen","setIsOpen","console","log","current","classList","toggle","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tonic/react-applications/src/components/ExpandableSection.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ExpandableSection.css';\r\n\r\nfunction ExpandableSection({heading, subheading, children}) {\r\n  const container = useRef(null);\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  useEffect(() => {\r\n    console.log('updating class list (soon)', container.current.classList);\r\n    container.current.classList.toggle('closed', isOpen);\r\n    // document.getElementsByClassName('expandable-container').classList.toggle('closed', isOpen);\r\n  },[isOpen])\r\n    \r\n  return (\r\n      <div className='expandable-container closed' ref={container}>\r\n        <h2>{heading}</h2>\r\n        <div className='expandable-header'>\r\n          <button type='button' onClick={()=> setIsOpen(!isOpen)}>\r\n            <span>{subheading}</span>\r\n            <span className='closed-expander'>+</span>\r\n            <span className='open-expander'>-</span>\r\n          </button>\r\n        </div>\r\n        <div className='expandable-contents'>\r\n          <p>\r\n              {children}\r\n          </p>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ExpandableSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,iBAAiBA,CAAC;EAACC,OAAO;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3CC,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEJ,SAAS,CAACK,OAAO,CAACC,SAAS,CAAC;IACtEN,SAAS,CAACK,OAAO,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,EAAEN,MAAM,CAAC;IACpD;EACF,CAAC,EAAC,CAACA,MAAM,CAAC,CAAC;EAEX,oBACIP,OAAA;IAAKc,SAAS,EAAC,6BAA6B;IAACC,GAAG,EAAET,SAAU;IAAAF,QAAA,gBAC1DJ,OAAA;MAAAI,QAAA,EAAKF;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBnB,OAAA;MAAKc,SAAS,EAAC,mBAAmB;MAAAV,QAAA,eAChCJ,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAKb,SAAS,CAAC,CAACD,MAAM,CAAE;QAAAH,QAAA,gBACrDJ,OAAA;UAAAI,QAAA,EAAOD;QAAU;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBnB,OAAA;UAAMc,SAAS,EAAC,iBAAiB;UAAAV,QAAA,EAAC;QAAC;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1CnB,OAAA;UAAMc,SAAS,EAAC,eAAe;UAAAV,QAAA,EAAC;QAAC;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNnB,OAAA;MAAKc,SAAS,EAAC,qBAAqB;MAAAV,QAAA,eAClCJ,OAAA;QAAAI,QAAA,EACKA;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACd,EAAA,CA1BQJ,iBAAiB;AAAAqB,EAAA,GAAjBrB,iBAAiB;AA4B1B,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}