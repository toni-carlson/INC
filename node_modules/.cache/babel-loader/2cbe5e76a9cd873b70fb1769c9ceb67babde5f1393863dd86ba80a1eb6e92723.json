{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonic\\\\react-applications\\\\src\\\\components\\\\ExpandableSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ExpandableSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpandableSection({\n  heading,\n  subheading,\n  children\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    document.getElementsByClassName('expandable-container').classList.toggle('closed', isOpen);\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expandable-container closed\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expandable-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onCLick: () => setIsOpen(!isOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: subheading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"closed-expander\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"open-expander\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expandable-contents\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n_s(ExpandableSection, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n_c = ExpandableSection;\nexport default ExpandableSection;\nvar _c;\n$RefreshReg$(_c, \"ExpandableSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ExpandableSection","heading","subheading","children","_s","isOpen","setIsOpen","document","getElementsByClassName","classList","toggle","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onCLick","_c","$RefreshReg$"],"sources":["C:/Users/tonic/react-applications/src/components/ExpandableSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ExpandableSection.css';\r\n\r\nfunction ExpandableSection({heading, subheading, children}) {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  useEffect(() => {\r\n    document.getElementsByClassName('expandable-container').classList.toggle('closed', isOpen);\r\n  },[isOpen])\r\n    \r\n  return (\r\n      <div className='expandable-container closed'>\r\n        <h2>{heading}</h2>\r\n        <div className='expandable-header'>\r\n          <button type='button' onCLick={()=> setIsOpen(!isOpen)}>\r\n            <span>{subheading}</span>\r\n            <span className='closed-expander'>+</span>\r\n            <span className='open-expander'>-</span>\r\n          </button>\r\n        </div>\r\n        <div className='expandable-contents'>\r\n          <p>\r\n              {children}\r\n          </p>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ExpandableSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,iBAAiBA,CAAC;EAACC,OAAO;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3CC,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACC,sBAAsB,CAAC,sBAAsB,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;EAC5F,CAAC,EAAC,CAACA,MAAM,CAAC,CAAC;EAEX,oBACIN,OAAA;IAAKY,SAAS,EAAC,6BAA6B;IAAAR,QAAA,gBAC1CJ,OAAA;MAAAI,QAAA,EAAKF;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBhB,OAAA;MAAKY,SAAS,EAAC,mBAAmB;MAAAR,QAAA,eAChCJ,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAKX,SAAS,CAAC,CAACD,MAAM,CAAE;QAAAF,QAAA,gBACrDJ,OAAA;UAAAI,QAAA,EAAOD;QAAU;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBhB,OAAA;UAAMY,SAAS,EAAC,iBAAiB;UAAAR,QAAA,EAAC;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1ChB,OAAA;UAAMY,SAAS,EAAC,eAAe;UAAAR,QAAA,EAAC;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNhB,OAAA;MAAKY,SAAS,EAAC,qBAAqB;MAAAR,QAAA,eAClCJ,OAAA;QAAAI,QAAA,EACKA;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACX,EAAA,CAvBQJ,iBAAiB;AAAAkB,EAAA,GAAjBlB,iBAAiB;AAyB1B,eAAeA,iBAAiB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}