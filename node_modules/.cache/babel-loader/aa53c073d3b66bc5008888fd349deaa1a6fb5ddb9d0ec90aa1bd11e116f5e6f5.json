{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonic\\\\react-applications\\\\src\\\\pages\\\\who_we_help\\\\components\\\\ExpandableSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ExpandableSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpandableSection({\n  id,\n  heading,\n  subheading,\n  children\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  function handleClick() {\n    document.querySelectorAll('.expandable-container').forEach(el => {\n      el.setIsOpen(false);\n    });\n    setIsOpen(!isOpen);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `expandable-container ${isOpen ? '' : 'closed'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"expandable-header\",\n      type: \"button\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: subheading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isOpen ? '-' : '+'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: id,\n      className: \"expandable-contents\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}\n_s(ExpandableSection, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = ExpandableSection;\nexport default ExpandableSection;\nvar _c;\n$RefreshReg$(_c, \"ExpandableSection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpandableSection","id","heading","subheading","children","_s","isOpen","setIsOpen","handleClick","document","querySelectorAll","forEach","el","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tonic/react-applications/src/pages/who_we_help/components/ExpandableSection.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpandableSection.css';\r\n\r\nfunction ExpandableSection({id, heading, subheading, children}) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  function handleClick() {\r\n    document.querySelectorAll('.expandable-container').forEach((el) => {\r\n      el.setIsOpen(false);\r\n    });\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  return (\r\n      <div className={`expandable-container ${isOpen ? '' : 'closed'}`}>\r\n        <h2>{heading}</h2>\r\n        <button\r\n          className='expandable-header'\r\n          type='button'\r\n          aria-expanded={isOpen}\r\n          aria-controls={id}\r\n          onClick={handleClick}\r\n        >\r\n          <span>{ subheading }</span>\r\n          <span>{ isOpen ? '-' : '+' }</span>\r\n        </button>\r\n        { isOpen &&\r\n          <div id={id} className='expandable-contents'>\r\n            <p>\r\n                {children}\r\n            </p>\r\n          </div>\r\n        }\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ExpandableSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,iBAAiBA,CAAC;EAACC,EAAE;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC9D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3C,SAASW,WAAWA,CAAA,EAAG;IACrBC,QAAQ,CAACC,gBAAgB,CAAC,uBAAuB,CAAC,CAACC,OAAO,CAAEC,EAAE,IAAK;MACjEA,EAAE,CAACL,SAAS,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IACFA,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB;EAEA,oBACIP,OAAA;IAAKc,SAAS,EAAG,wBAAuBP,MAAM,GAAG,EAAE,GAAG,QAAS,EAAE;IAAAF,QAAA,gBAC/DL,OAAA;MAAAK,QAAA,EAAKF;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBlB,OAAA;MACEc,SAAS,EAAC,mBAAmB;MAC7BK,IAAI,EAAC,QAAQ;MACb,iBAAeZ,MAAO;MACtB,iBAAeL,EAAG;MAClBkB,OAAO,EAAEX,WAAY;MAAAJ,QAAA,gBAErBL,OAAA;QAAAK,QAAA,EAAQD;MAAU;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3BlB,OAAA;QAAAK,QAAA,EAAQE,MAAM,GAAG,GAAG,GAAG;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACPX,MAAM,iBACNP,OAAA;MAAKE,EAAE,EAAEA,EAAG;MAACY,SAAS,EAAC,qBAAqB;MAAAT,QAAA,eAC1CL,OAAA;QAAAK,QAAA,EACKA;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEZ;AAACZ,EAAA,CAhCQL,iBAAiB;AAAAoB,EAAA,GAAjBpB,iBAAiB;AAkC1B,eAAeA,iBAAiB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}