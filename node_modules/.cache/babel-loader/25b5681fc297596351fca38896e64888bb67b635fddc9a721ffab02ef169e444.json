{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonic\\\\react-applications\\\\src\\\\pages\\\\who_we_help\\\\components\\\\ExpandableSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ExpandableSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpandableSection({\n  id,\n  heading,\n  subheading,\n  children\n}) {\n  _s();\n  const container = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  // useEffect(() => {\n  //   container.current.classList.toggle('closed', !isOpen);\n  // },[isOpen]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `expandable-container ${isOpen ? '' : 'closed'}`,\n    ref: container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"expandable-header\",\n      type: \"button\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: subheading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isOpen ? '-' : '+'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: id,\n      className: \"expandable-contents\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n_s(ExpandableSection, \"mYXafVU7zJ8EFevEkkFAXpMb5iA=\");\n_c = ExpandableSection;\nexport default ExpandableSection;\nvar _c;\n$RefreshReg$(_c, \"ExpandableSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ExpandableSection","id","heading","subheading","children","_s","container","isOpen","setIsOpen","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tonic/react-applications/src/pages/who_we_help/components/ExpandableSection.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ExpandableSection.css';\r\n\r\nfunction ExpandableSection({id, heading, subheading, children}) {\r\n  const container = useRef(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // useEffect(() => {\r\n  //   container.current.classList.toggle('closed', !isOpen);\r\n  // },[isOpen]);\r\n\r\n  return (\r\n      <div className={`expandable-container ${isOpen ? '' : 'closed'}`} ref={container}>\r\n        <h2>{heading}</h2>\r\n        <button\r\n          className='expandable-header'\r\n          type='button'\r\n          aria-expanded={isOpen}\r\n          aria-controls={id}\r\n          onClick={()=> setIsOpen(!isOpen)}\r\n        >\r\n          <span>{subheading}</span>\r\n          <span>{ isOpen ? '-' : '+'}</span>\r\n        </button>\r\n        { isOpen &&\r\n          <div id={id} className='expandable-contents'>\r\n            <p>\r\n                {children}\r\n            </p>\r\n          </div>\r\n        }\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ExpandableSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,iBAAiBA,CAAC;EAACC,EAAE;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC9D,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C;EACA;EACA;;EAEA,oBACII,OAAA;IAAKU,SAAS,EAAG,wBAAuBF,MAAM,GAAG,EAAE,GAAG,QAAS,EAAE;IAACG,GAAG,EAAEJ,SAAU;IAAAF,QAAA,gBAC/EL,OAAA;MAAAK,QAAA,EAAKF;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBf,OAAA;MACEU,SAAS,EAAC,mBAAmB;MAC7BM,IAAI,EAAC,QAAQ;MACb,iBAAeR,MAAO;MACtB,iBAAeN,EAAG;MAClBe,OAAO,EAAEA,CAAA,KAAKR,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAH,QAAA,gBAEjCL,OAAA;QAAAK,QAAA,EAAOD;MAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBf,OAAA;QAAAK,QAAA,EAAQG,MAAM,GAAG,GAAG,GAAG;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,EACPP,MAAM,iBACNR,OAAA;MAAKE,EAAE,EAAEA,EAAG;MAACQ,SAAS,EAAC,qBAAqB;MAAAL,QAAA,eAC1CL,OAAA;QAAAK,QAAA,EACKA;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEZ;AAACT,EAAA,CA7BQL,iBAAiB;AAAAiB,EAAA,GAAjBjB,iBAAiB;AA+B1B,eAAeA,iBAAiB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}